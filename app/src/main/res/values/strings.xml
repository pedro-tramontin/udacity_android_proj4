<resources>
    <string name="app_name">SoundCloud Musical App</string>

    <!-- Activities -->
    <string name="album_activity_title">Album</string>
    <string name="artist_activity_title">Artist</string>
    <string name="genre_search_result_activity_title">Genre Search Result</string>
    <string name="genres_activity_title">Genres</string>
    <string name="play_activity_title">Play</string>
    <string name="search_results_activity_title">Search results</string>

    <!-- Activities descriptions -->
    <string name="album_activity_description">Displays a album details, with the artist\'s name,
        the album\'s name, a picture of the album, when there is one, a button to play all the
        tracks one after another and the tracks\' names with a button to play each one
        individually.\nThe details of the album can be fetched using SoundCloud HTTP API,
        with the resource /playlists</string>
    <string name="artist_activity_description">An activity that shows an overview of the artist
        with a picture of him/her and shows all the albums and tracks.\nThe albums are displayed
        with a picture, the album\'s name and a brief description of it.\nTo get this done
        the SoundCloud HTTP API has a resource called /users, that can be used to get all
        the artists attributes like fullname, city, description and his tracks.</string>
    <string name="genre_search_result_activity_description_n">This activity shows a list of
        albums by genre, it lets the user modify some search options like genre, order by and a
        text filter to be applied to the results.\nBelow it, a list of albums is displayed, with
        the album\'s picture and a brief description, which includes the artist\'s name, the year
        it was released, a popularity gauge, etc.\nJust like in the SearchResultActivity, this
        activity could make use of SoundCloud HTTP API to search for tracks with specific genres.
    </string>
    <string name="main_activity_description">Here the users are able to search for
        tracks using their names or part of their names, and also filter the tracks by their
        license type.\nBelow the search box, there is a top charts displaying the most
        played tracks by all the users\nAnd below the top charts there is a genres list, to
        access the albums by genres.</string>
    <string name="play_activty_description">Shows the track selected by the user, with a picture
        of the album, when there is one and when the user is playing a album, the artist\'s name,
        album\'s name, when the user is playing a album, license type, and the controls to play,
        pause and stop the music, to change the track being played in case it\'s a album and a
        control that shows the progress of the music being played and which enables the user to
        go forward or backward in music by clicking in it.\nTo get a specific track, we could use
        SoundCloud HTTP API to get the desired track, and then use the class
        android.media.MediaPlayer to stream and play it, one explanation on how to use the class
        can be found here: https://developer.android.com/guide/topics/media/mediaplayer
        .html</string>
    <string name="search_results_activity_description">In this activity, the users are able to
        see the results of theirs search, and modify the search options like the term that was
        searched for, the license type, the order the search are displayed, like: by artist\'s name,
        by track\'s name, by license type, by release date, etc, and also apply some text filter to
        the searched result, this would be useful if the users first searched for the artist name
        and then they would want to limit the results by a specific text, some part of the track
        name they remember, for example.\nBelow the search options, the results are displayed one
        below the other, with a picture of the artist and the details of the track found.\nThe
        search could be performed using their HTTP API, documented here:
        https://developers.soundcloud.com/docs/api/reference, and using a class like
        org.apache.http.client.HttpClient to send all the necessary GETs.
    </string>
</resources>
